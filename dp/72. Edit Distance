class Solution {
public:
    int minDistance(string w, string t) {
        vector<vector<int>>memo(w.size()+1,vector<int>(t.size()+1,-1));
        return solve(w,t,memo,0,0);
    }
    private: int solve(string &w, string &t,vector<vector<int>>&memo,int i,int j){
        if(j==t.size()) return w.size()-i;
        if(i==w.size()) return t.size()-j;
        
        //if matches you can keep and move forward
        if(memo[i][j]!=-1) return memo[i][j];
        int matches=5000,replace=5000,insert=5000,remove=5000;
        
        if(w[i]==t[j])
            matches=solve(w,t,memo,i+1,j+1);
        
        replace=1+solve(w,t,memo,i+1,j+1);
        insert=1+solve(w,t,memo,i+1,j);
        remove=1+solve(w,t,memo,i,j+1);
        
        return memo[i][j]=min(matches,min(replace,min(insert,remove)));
    }
};