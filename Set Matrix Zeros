class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        //bruteForce(matrix);
        
        //optimized
        int fr=0,fc=0;   //kyunki yanha overlap krega isliye isko alg krke rakh rhe
        for(int r=0;r<matrix.size();r++){
            for(int c=0;c<matrix[0].size();c++){
                if(matrix[r][c]==0){
                    if(r==0) fr=1;
                    if(c==0) fc=1;
                   matrix[r][0]=0;
                    matrix[0][c]=0;
                }
            }
        }
        
        for(int r=1;r<matrix.size();r++){
            for(int c=1;c<matrix[0].size();c++){
                if(matrix[0][c]==0||matrix[r][0]==0){
                    matrix[r][c]=0;
                }
            }
        }
        if(fr){
            for(int i=0;i<matrix[0].size();i++) matrix[0][i]=0;
        }
        if(fc){
            for(int i=0;i<matrix.size();i++) matrix[i][0]=0;
        }
        return;
        
    }
    
    private:void bruteForce(vector<vector<int>>& matrix){
        //using the brute force approach that space of m+n
        set<int>row;
        set<int>col;
        for(int r=0;r<matrix.size();r++){
            for(int c=0;c<matrix[0].size();c++){
                if(matrix[r][c]==0){
                   row.insert(r);
                    col.insert(c);
                }
            }
        }
        
        for(int r=0;r<matrix.size();r++){
            for(int c=0;c<matrix[0].size();c++){
                if(row.find(r)!=row.end()||col.find(c)!=col.end()){
                   matrix[r][c]=0;
                }
            }
        }
        
       
        return;
        
    }
};
